C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\java\com\example\appmovil\ProductoAdapter.kt:31: Warning: Implicitly using the default locale is a common source of bugs: Use String.format(Locale, ...) instead [DefaultLocale]
        textViewPrecio.text = "$${String.format("%.0f", producto.precio)} CLP"
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\java\com\example\appmovil\ProductoAdapter.kt:31: Warning: Implicitly using the default locale is a common source of bugs: Use String.format(Locale, ...) instead [DefaultLocale]
        textViewPrecio.text = "$${String.format("%.0f", producto.precio)} CLP"
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "DefaultLocale":
   Calling String#toLowerCase() or #toUpperCase() without specifying an
   explicit locale is a common source of bugs. The reason for that is that
   those methods will use the current locale on the user's device, and even
   though the code appears to work correctly when you are developing the app,
   it will fail in some locales. For example, in the Turkish locale, the
   uppercase replacement for i is not I.

   If you want the methods to just perform ASCII replacement, for example to
   convert an enum name, call String#toUpperCase(Locale.ROOT) instead. If you
   really want to use the current locale, call
   String#toUpperCase(Locale.getDefault()) instead.

   https://developer.android.com/reference/java/util/Locale.html#default_locale

C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\build.gradle.kts:54: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.1 [GradleDependency]
    implementation("androidx.appcompat:appcompat:1.6.1")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\build.gradle.kts:55: Warning: A newer version of com.google.android.material:material than 1.10.0 is available: 1.13.0 [GradleDependency]
    implementation("com.google.android.material:material:1.10.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\gradle\libs.versions.toml:10: Warning: A newer version of androidx.compose:compose-bom than 2024.09.00 is available: 2025.10.01 [GradleDependency]
composeBom = "2024.09.00"
             ~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\gradle\libs.versions.toml:3: Warning: A newer version of org.jetbrains.kotlin.android than 2.0.21 is available: 2.2.21 [NewerVersionAvailable]
kotlin = "2.0.21"
         ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\gradle\libs.versions.toml:3: Warning: A newer version of org.jetbrains.kotlin.plugin.compose than 2.0.21 is available: 2.2.21 [NewerVersionAvailable]
kotlin = "2.0.21"
         ~~~~~~~~

   Explanation for issues of type "NewerVersionAvailable":
   This detector checks with a central repository to see if there are newer
   versions available for the dependencies used by this project. This is
   similar to the GradleDependency check, which checks for newer versions
   available in the Android SDK tools and libraries, but this works with any
   MavenCentral dependency, and connects to the library every time, which
   makes it more flexible but also much slower.

C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_consulta.xml:6: Warning: Possible overdraw: Root element paints background @color/cream with a theme that also paints a background (inferred theme is @style/Theme_AppMovil) [Overdraw]
    android:background="@color/cream">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_home.xml:8: Warning: Possible overdraw: Root element paints background @color/cream with a theme that also paints a background (inferred theme is @style/Theme_AppMovil) [Overdraw]
    android:background="@color/cream">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:5: Warning: Possible overdraw: Root element paints background @color/cream with a theme that also paints a background (inferred theme is @style/Theme_AppMovil) [Overdraw]
    android:background="@color/cream">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_login.xml:8: Warning: Possible overdraw: Root element paints background @color/cream with a theme that also paints a background (inferred theme is @style/Theme_AppMovil) [Overdraw]
    android:background="@color/cream">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_productos.xml:6: Warning: Possible overdraw: Root element paints background @color/cream with a theme that also paints a background (inferred theme is @style/Theme_AppMovil) [Overdraw]
    android:background="@color/cream">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "Overdraw":
   If you set a background drawable on a root view, then you should use a
   custom theme where the theme background is null. Otherwise, the theme
   background will be painted first, only to have your custom background
   completely cover it; this is called "overdraw".

   NOTE: This detector relies on figuring out which layouts are associated
   with which activities based on scanning the Java code, and it's currently
   doing that using an inexact pattern matching algorithm. Therefore, it can
   incorrectly conclude which activity the layout is associated with and then
   wrongly complain that a background-theme is hidden.

   If you want your custom background on multiple pages, then you should
   consider making a custom theme with your custom background and just using
   that theme instead of a root element background.

   Of course it's possible that your custom drawable is translucent and you
   want it to be mixed with the background. However, you will get better
   performance if you pre-mix the background with your drawable and use that
   resulting image or color as a custom theme background instead.

C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\values\colors.xml:8: Warning: The resource R.color.black appears to be unused [UnusedResources]
    <color name="black">#FF000000</color>
           ~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

   Available options:

   **skip-libraries** (default is true):
   Whether the unused resource check should skip reporting unused resources in libraries.

   Many libraries will declare resources that are part of the library surface; other modules depending on the library will also reference the resources. To avoid reporting all these resources as unused (in the context of a library), the unused resource check normally skips reporting unused resources in libraries. Instead, run the unused resource check on the consuming app module (along with `checkDependencies=true`).

   However, there are cases where you want to check that all the resources declared in a library are used; in that case, you can disable the skip option.

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="UnusedResources">
           <option name="skip-libraries" value="true" />
       </issue>
   </lint>
   ```

C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_consulta.xml:25: Warning: This text field does not specify an inputType [TextFields]
        <EditText
         ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:25: Warning: This text field does not specify an inputType [TextFields]
        <EditText
         ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:36: Warning: This text field does not specify an inputType [TextFields]
        <EditText
         ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:47: Warning: This text field does not specify an inputType [TextFields]
        <EditText
         ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_login.xml:26: Warning: This text field does not specify an inputType [TextFields]
    <EditText
     ~~~~~~~~

   Explanation for issues of type "TextFields":
   Providing an inputType attribute on a text field improves usability because
   depending on the data to be input, optimized keyboards can be shown to the
   user (such as just digits and parentheses for a phone number). 

   The lint detector also looks at the id of the view, and if the id offers a
   hint of the purpose of the field (for example, the id contains the phrase
   phone or email), then lint will also ensure that the inputType contains the
   corresponding type attributes.

   If you really want to keep the text field generic, you can suppress this
   warning by setting inputType="text".

C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_consulta.xml:25: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:25: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:36: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:47: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:59: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:71: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_login.xml:26: Warning: Missing autofillHints attribute [Autofill]
    <EditText
     ~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_login.xml:37: Warning: Missing autofillHints attribute [Autofill]
    <EditText
     ~~~~~~~~

   Explanation for issues of type "Autofill":
   Specify an autofillHints attribute when targeting SDK version 26 or higher
   or explicitly specify that the view is not important for autofill. Your app
   can help an autofill service classify the data correctly by providing the
   meaning of each view that could be autofillable, such as views representing
   usernames, passwords, credit card fields, email addresses, etc.

   The hints can have any value, but it is recommended to use predefined
   values like 'username' for a username or 'creditCardNumber' for a credit
   card number. For a list of all predefined autofill hint constants, see the
   AUTOFILL_HINT_ constants in the View reference at
   https://developer.android.com/reference/android/view/View.html.

   You can mark a view unimportant for autofill by specifying an
   importantForAutofill attribute on that view or a parent view. See
   https://developer.android.com/reference/android/view/View.html#setImportant
   ForAutofill(int).

   https://developer.android.com/guide/topics/text/autofill.html

C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\build.gradle.kts:54: Warning: Use version catalog instead [UseTomlInstead]
    implementation("androidx.appcompat:appcompat:1.6.1")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\build.gradle.kts:55: Warning: Use version catalog instead [UseTomlInstead]
    implementation("com.google.android.material:material:1.10.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UseTomlInstead":
   If your project is using a libs.versions.toml file, you should place all
   Gradle dependencies in the TOML file. This lint check looks for version
   declarations outside of the TOML file and suggests moving them (and in the
   IDE, provides a quickfix to performing the operation automatically).

C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:83: Warning: Missing contentDescription attribute on image [ContentDescription]
        <ImageView
         ~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_login.xml:10: Warning: Missing contentDescription attribute on image [ContentDescription]
    <ImageView
     ~~~~~~~~~

   Explanation for issues of type "ContentDescription":
   Non-textual widgets like ImageViews and ImageButtons should use the
   contentDescription attribute to specify a textual description of the widget
   such that screen readers and other accessibility tools can adequately
   describe the user interface.

   Note that elements in application screens that are purely decorative and do
   not provide any content or enable a user action should not have
   accessibility content descriptions. In this case, set their descriptions to
   @null. If your app's minSdkVersion is 16 or higher, you can instead set
   these graphical elements' android:importantForAccessibility attributes to
   no.

   Note that for text fields, you should not set both the hint and the
   contentDescription attributes since the hint will never be shown. Just set
   the hint.

   https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases

C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\java\com\example\appmovil\ProductoAdapter.kt:31: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        textViewPrecio.text = "$${String.format("%.0f", producto.precio)} CLP"
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\java\com\example\appmovil\ProductoAdapter.kt:31: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
        textViewPrecio.text = "$${String.format("%.0f", producto.precio)} CLP"
                                                                         ~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\java\com\example\appmovil\ProductoAdapter.kt:32: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        textViewCantidad.text = "Stock: ${producto.cantidad}"
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\java\com\example\appmovil\ProductoAdapter.kt:32: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
        textViewCantidad.text = "Stock: ${producto.cantidad}"
                                 ~~~~~~~

   Explanation for issues of type "SetTextI18n":
   When calling TextView#setText
   * Never call Number#toString() to format numbers; it will not handle
   fraction separators and locale-specific digits properly. Consider using
   String#format with proper format specifications (%d or %f) instead.
   * Do not pass a string literal (e.g. "Hello") to display text. Hardcoded
   text can not be properly translated to other languages. Consider using
   Android resource strings instead.
   * Do not build messages by concatenating text chunks. Such messages can not
   be properly translated.

   https://developer.android.com/guide/topics/resources/localization.html

C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_consulta.xml:11: Warning: Hardcoded string "Consulta de Productos", should use @string resource [HardcodedText]
        android:text="Consulta de Productos"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_consulta.xml:30: Warning: Hardcoded string "Buscar producto por ID o nombre", should use @string resource [HardcodedText]
            android:hint="Buscar producto por ID o nombre"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_consulta.xml:41: Warning: Hardcoded string "Buscar", should use @string resource [HardcodedText]
            android:text="Buscar"
            ~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_consulta.xml:60: Warning: Hardcoded string "Volver", should use @string resource [HardcodedText]
        android:text="Volver"
        ~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_home.xml:13: Warning: Hardcoded string "ChocoApp", should use @string resource [HardcodedText]
        android:text="ChocoApp"
        ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_home.xml:23: Warning: Hardcoded string "Productos", should use @string resource [HardcodedText]
        android:text="Productos"
        ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_home.xml:34: Warning: Hardcoded string "Consulta", should use @string resource [HardcodedText]
        android:text="Consulta"
        ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_home.xml:45: Warning: Hardcoded string "Ingreso", should use @string resource [HardcodedText]
        android:text="Ingreso"
        ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:16: Warning: Hardcoded string "Ingreso de Productos", should use @string resource [HardcodedText]
            android:text="Ingreso de Productos"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:29: Warning: Hardcoded string "Ingrese el ID del producto", should use @string resource [HardcodedText]
            android:hint="Ingrese el ID del producto"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:40: Warning: Hardcoded string "Ingrese el nombre del producto", should use @string resource [HardcodedText]
            android:hint="Ingrese el nombre del producto"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:51: Warning: Hardcoded string "Ingrese la descripción del producto", should use @string resource [HardcodedText]
            android:hint="Ingrese la descripción del producto"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:63: Warning: Hardcoded string "Ingrese el precio del producto", should use @string resource [HardcodedText]
            android:hint="Ingrese el precio del producto"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:75: Warning: Hardcoded string "Ingrese la cantidad en stock", should use @string resource [HardcodedText]
            android:hint="Ingrese la cantidad en stock"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:95: Warning: Hardcoded string "Tomar Foto", should use @string resource [HardcodedText]
            android:text="Tomar Foto"
            ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:106: Warning: Hardcoded string "Guardar Producto", should use @string resource [HardcodedText]
            android:text="Guardar Producto"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_ingreso.xml:117: Warning: Hardcoded string "Volver", should use @string resource [HardcodedText]
            android:text="Volver"
            ~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_login.xml:20: Warning: Hardcoded string "ChocoApp", should use @string resource [HardcodedText]
        android:text="ChocoApp"
        ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_login.xml:30: Warning: Hardcoded string "Ingrese su usuario", should use @string resource [HardcodedText]
        android:hint="Ingrese su usuario"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_login.xml:41: Warning: Hardcoded string "Ingrese su contraseña", should use @string resource [HardcodedText]
        android:hint="Ingrese su contraseña"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_login.xml:53: Warning: Hardcoded string "Iniciar Sesión", should use @string resource [HardcodedText]
        android:text="Iniciar Sesión"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_productos.xml:11: Warning: Hardcoded string "Lista de Productos", should use @string resource [HardcodedText]
        android:text="Lista de Productos"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\activity_productos.xml:30: Warning: Hardcoded string "Volver", should use @string resource [HardcodedText]
        android:text="Volver"
        ~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\item_producto.xml:14: Warning: Hardcoded string "Nombre del Producto", should use @string resource [HardcodedText]
        android:text="Nombre del Producto"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\item_producto.xml:24: Warning: Hardcoded string "$0.00", should use @string resource [HardcodedText]
        android:text="$0.00"
        ~~~~~~~~~~~~~~~~~~~~
C:\Users\jorda\OneDrive\Escritorio\Clases-mobile\app\src\main\res\layout\item_producto.xml:34: Warning: Hardcoded string "Stock: 0", should use @string resource [HardcodedText]
        android:text="Stock: 0"
        ~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 60 warnings
